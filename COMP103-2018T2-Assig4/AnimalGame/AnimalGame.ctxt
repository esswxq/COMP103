#BlueJ class context
comment0.target=AnimalGame
comment1.params=
comment1.target=AnimalGame()
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ setupGUI()
comment2.text=\n\ Set\ up\ the\ interface\n
comment3.params=
comment3.target=void\ resetTree()
comment3.text=\n\ Makes\ an\ initial\ tree\ with\ two\ question\ nodes\ and\ three\ leaf\ nodes.\n
comment4.params=
comment4.target=void\ play()
comment4.text=\n\ Play\ the\ game.\n\ Starts\ at\ the\ top\ (questionsTree),\ and\ works\ its\ way\ down\ the\ tree\n\ \ until\ it\ finally\ gets\ to\ a\ leaf\ node\ (with\ an\ answer\ in\ it)\n\ If\ the\ current\ node\ has\ a\ question,\ then\ it\ asks\ the\ question\ in\ the\ node,\n\ and\ depending\ on\ the\ answer,\ goes\ to\ the\ "yes"\ child\ or\ the\ "no"\ child.\n\ If\ the\ current\ node\ is\ a\ leaf\ it\ calls\ processLeaf\ on\ the\ node\ \n
comment5.params=leaf
comment5.target=void\ processLeaf(DTNode)
comment5.text=\n\ Process\ a\ leaf\ node\ (a\ node\ with\ an\ answer\ in\ it)\n\ Tell\ the\ player\ what\ the\ answer\ is,\ and\ ask\ if\ it\ is\ correct.\n\ If\ it\ is\ not\ correct,\ ask\ for\ the\ right\ answer,\ and\ a\ property\ to\ distinguish\n\ \ the\ guess\ from\ the\ right\ answer\n\ Change\ the\ leaf\ node\ into\ a\ question\ node\ asking\ about\ that\ fact,\n\ \ adding\ two\ new\ leaf\ nodes\ to\ the\ node,\ with\ the\ guess\ and\ the\ right\n\ \ answer.\n
comment6.params=
comment6.target=void\ printTree()
comment6.text=\ \ COMPLETION\n\ Print\ out\ the\ contents\ of\ the\ decision\ tree\ in\ the\ text\ pane.\n\ The\ root\ node\ should\ be\ at\ the\ top,\ followed\ by\ its\ "yes"\ subtree,\ and\ then\n\ its\ "no"\ subtree.\n\ Each\ node\ should\ be\ indented\ by\ how\ deep\ it\ is\ in\ the\ tree.\n
comment7.params=node\ indent
comment7.target=void\ printSubTree(DTNode,\ java.lang.String)
comment7.text=\n\ Recursively\ print\ a\ subtree,\ given\ the\ node\ at\ its\ root\n\ \ -\ print\ the\ text\ in\ the\ node\ with\ the\ given\ indentation\n\ \ -\ if\ it\ is\ a\ question\ node,\ then\ \n\ \ \ \ print\ its\ two\ subtrees\ with\ increased\ indentation\n
comment8.params=
comment8.target=void\ drawTree()
comment8.text=\ \ CHALLENGE\n\ Draw\ the\ tree\ on\ the\ graphics\ pane\ as\ boxes,\ connected\ by\ lines.\n\ To\ make\ the\ tree\ fit\ in\ a\ window,\ the\ tree\ should\ go\ from\ left\ to\ right\n\ (ie,\ the\ root\ should\ be\ drawn\ at\ the\ left)\n\ The\ lines\ should\ be\ drawn\ before\ the\ boxes\ that\ they\ are\ connecting\n
comment9.params=node\ x\ y\ count
comment9.target=void\ drawSubTree(DTNode,\ double,\ double,\ int)
comment9.text=\n\ Recursively\ draw\ a\ subtree,\ given\ the\ node\ at\ its\ root\n\ \ -\ print\ the\ line\ which\ linked\ nodes\n\ \ -\ if\ it\ is\ a\ question\ node,\n\ \ \ \ draw\ its\ two\ subtrees\ with\ line\ linked\ them\n
numComments=11
